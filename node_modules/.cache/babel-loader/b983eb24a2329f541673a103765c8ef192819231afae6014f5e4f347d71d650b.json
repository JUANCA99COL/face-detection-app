{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ResolvingCall = void 0;\nconst constants_1 = require(\"./constants\");\nconst deadline_1 = require(\"./deadline\");\nconst metadata_1 = require(\"./metadata\");\nconst logging = require(\"./logging\");\nconst control_plane_status_1 = require(\"./control-plane-status\");\nconst TRACER_NAME = 'resolving_call';\nclass ResolvingCall {\n  constructor(channel, method, options, filterStackFactory, credentials, callNumber) {\n    this.channel = channel;\n    this.method = method;\n    this.filterStackFactory = filterStackFactory;\n    this.credentials = credentials;\n    this.callNumber = callNumber;\n    this.child = null;\n    this.readPending = false;\n    this.pendingMessage = null;\n    this.pendingHalfClose = false;\n    this.ended = false;\n    this.readFilterPending = false;\n    this.writeFilterPending = false;\n    this.pendingChildStatus = null;\n    this.metadata = null;\n    this.listener = null;\n    this.statusWatchers = [];\n    this.deadlineTimer = setTimeout(() => {}, 0);\n    this.filterStack = null;\n    this.deadline = options.deadline;\n    this.host = options.host;\n    if (options.parentCall) {\n      if (options.flags & constants_1.Propagate.CANCELLATION) {\n        options.parentCall.on('cancelled', () => {\n          this.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled by parent call');\n        });\n      }\n      if (options.flags & constants_1.Propagate.DEADLINE) {\n        this.trace('Propagating deadline from parent: ' + options.parentCall.getDeadline());\n        this.deadline = (0, deadline_1.minDeadline)(this.deadline, options.parentCall.getDeadline());\n      }\n    }\n    this.trace('Created');\n    this.runDeadlineTimer();\n  }\n  trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, '[' + this.callNumber + '] ' + text);\n  }\n  runDeadlineTimer() {\n    clearTimeout(this.deadlineTimer);\n    this.trace('Deadline: ' + (0, deadline_1.deadlineToString)(this.deadline));\n    const timeout = (0, deadline_1.getRelativeTimeout)(this.deadline);\n    if (timeout !== Infinity) {\n      this.trace('Deadline will be reached in ' + timeout + 'ms');\n      const handleDeadline = () => {\n        this.cancelWithStatus(constants_1.Status.DEADLINE_EXCEEDED, 'Deadline exceeded');\n      };\n      if (timeout <= 0) {\n        process.nextTick(handleDeadline);\n      } else {\n        this.deadlineTimer = setTimeout(handleDeadline, timeout);\n      }\n    }\n  }\n  outputStatus(status) {\n    if (!this.ended) {\n      this.ended = true;\n      if (!this.filterStack) {\n        this.filterStack = this.filterStackFactory.createFilter();\n      }\n      clearTimeout(this.deadlineTimer);\n      const filteredStatus = this.filterStack.receiveTrailers(status);\n      this.trace('ended with status: code=' + filteredStatus.code + ' details=\"' + filteredStatus.details + '\"');\n      this.statusWatchers.forEach(watcher => watcher(filteredStatus));\n      process.nextTick(() => {\n        var _a;\n        (_a = this.listener) === null || _a === void 0 ? void 0 : _a.onReceiveStatus(filteredStatus);\n      });\n    }\n  }\n  sendMessageOnChild(context, message) {\n    if (!this.child) {\n      throw new Error('sendMessageonChild called with child not populated');\n    }\n    const child = this.child;\n    this.writeFilterPending = true;\n    this.filterStack.sendMessage(Promise.resolve({\n      message: message,\n      flags: context.flags\n    })).then(filteredMessage => {\n      this.writeFilterPending = false;\n      child.sendMessageWithContext(context, filteredMessage.message);\n      if (this.pendingHalfClose) {\n        child.halfClose();\n      }\n    }, status => {\n      this.cancelWithStatus(status.code, status.details);\n    });\n  }\n  getConfig() {\n    if (this.ended) {\n      return;\n    }\n    if (!this.metadata || !this.listener) {\n      throw new Error('getConfig called before start');\n    }\n    const configResult = this.channel.getConfig(this.method, this.metadata);\n    if (configResult.type === 'NONE') {\n      this.channel.queueCallForConfig(this);\n      return;\n    } else if (configResult.type === 'ERROR') {\n      if (this.metadata.getOptions().waitForReady) {\n        this.channel.queueCallForConfig(this);\n      } else {\n        this.outputStatus(configResult.error);\n      }\n      return;\n    }\n    // configResult.type === 'SUCCESS'\n    const config = configResult.config;\n    if (config.status !== constants_1.Status.OK) {\n      const {\n        code,\n        details\n      } = (0, control_plane_status_1.restrictControlPlaneStatusCode)(config.status, 'Failed to route call to method ' + this.method);\n      this.outputStatus({\n        code: code,\n        details: details,\n        metadata: new metadata_1.Metadata()\n      });\n      return;\n    }\n    if (config.methodConfig.timeout) {\n      const configDeadline = new Date();\n      configDeadline.setSeconds(configDeadline.getSeconds() + config.methodConfig.timeout.seconds);\n      configDeadline.setMilliseconds(configDeadline.getMilliseconds() + config.methodConfig.timeout.nanos / 1000000);\n      this.deadline = (0, deadline_1.minDeadline)(this.deadline, configDeadline);\n      this.runDeadlineTimer();\n    }\n    this.filterStackFactory.push(config.dynamicFilterFactories);\n    this.filterStack = this.filterStackFactory.createFilter();\n    this.filterStack.sendMetadata(Promise.resolve(this.metadata)).then(filteredMetadata => {\n      this.child = this.channel.createInnerCall(config, this.method, this.host, this.credentials, this.deadline);\n      this.trace('Created child [' + this.child.getCallNumber() + ']');\n      this.child.start(filteredMetadata, {\n        onReceiveMetadata: metadata => {\n          this.trace('Received metadata');\n          this.listener.onReceiveMetadata(this.filterStack.receiveMetadata(metadata));\n        },\n        onReceiveMessage: message => {\n          this.trace('Received message');\n          this.readFilterPending = true;\n          this.filterStack.receiveMessage(message).then(filteredMesssage => {\n            this.trace('Finished filtering received message');\n            this.readFilterPending = false;\n            this.listener.onReceiveMessage(filteredMesssage);\n            if (this.pendingChildStatus) {\n              this.outputStatus(this.pendingChildStatus);\n            }\n          }, status => {\n            this.cancelWithStatus(status.code, status.details);\n          });\n        },\n        onReceiveStatus: status => {\n          this.trace('Received status');\n          if (this.readFilterPending) {\n            this.pendingChildStatus = status;\n          } else {\n            this.outputStatus(status);\n          }\n        }\n      });\n      if (this.readPending) {\n        this.child.startRead();\n      }\n      if (this.pendingMessage) {\n        this.sendMessageOnChild(this.pendingMessage.context, this.pendingMessage.message);\n      } else if (this.pendingHalfClose) {\n        this.child.halfClose();\n      }\n    }, status => {\n      this.outputStatus(status);\n    });\n  }\n  reportResolverError(status) {\n    var _a;\n    if ((_a = this.metadata) === null || _a === void 0 ? void 0 : _a.getOptions().waitForReady) {\n      this.channel.queueCallForConfig(this);\n    } else {\n      this.outputStatus(status);\n    }\n  }\n  cancelWithStatus(status, details) {\n    var _a;\n    this.trace('cancelWithStatus code: ' + status + ' details: \"' + details + '\"');\n    (_a = this.child) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(status, details);\n    this.outputStatus({\n      code: status,\n      details: details,\n      metadata: new metadata_1.Metadata()\n    });\n  }\n  getPeer() {\n    var _a, _b;\n    return (_b = (_a = this.child) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : this.channel.getTarget();\n  }\n  start(metadata, listener) {\n    this.trace('start called');\n    this.metadata = metadata.clone();\n    this.listener = listener;\n    this.getConfig();\n  }\n  sendMessageWithContext(context, message) {\n    this.trace('write() called with message of length ' + message.length);\n    if (this.child) {\n      this.sendMessageOnChild(context, message);\n    } else {\n      this.pendingMessage = {\n        context,\n        message\n      };\n    }\n  }\n  startRead() {\n    this.trace('startRead called');\n    if (this.child) {\n      this.child.startRead();\n    } else {\n      this.readPending = true;\n    }\n  }\n  halfClose() {\n    this.trace('halfClose called');\n    if (this.child && !this.writeFilterPending) {\n      this.child.halfClose();\n    } else {\n      this.pendingHalfClose = true;\n    }\n  }\n  setCredentials(credentials) {\n    this.credentials = this.credentials.compose(credentials);\n  }\n  addStatusWatcher(watcher) {\n    this.statusWatchers.push(watcher);\n  }\n  getCallNumber() {\n    return this.callNumber;\n  }\n}\nexports.ResolvingCall = ResolvingCall;","map":{"version":3,"names":["constants_1","require","deadline_1","metadata_1","logging","control_plane_status_1","TRACER_NAME","ResolvingCall","constructor","channel","method","options","filterStackFactory","credentials","callNumber","child","readPending","pendingMessage","pendingHalfClose","ended","readFilterPending","writeFilterPending","pendingChildStatus","metadata","listener","statusWatchers","deadlineTimer","setTimeout","filterStack","deadline","host","parentCall","flags","Propagate","CANCELLATION","on","cancelWithStatus","Status","CANCELLED","DEADLINE","trace","getDeadline","minDeadline","runDeadlineTimer","text","LogVerbosity","DEBUG","clearTimeout","deadlineToString","timeout","getRelativeTimeout","Infinity","handleDeadline","DEADLINE_EXCEEDED","process","nextTick","outputStatus","status","createFilter","filteredStatus","receiveTrailers","code","details","forEach","watcher","_a","onReceiveStatus","sendMessageOnChild","context","message","Error","sendMessage","Promise","resolve","then","filteredMessage","sendMessageWithContext","halfClose","getConfig","configResult","type","queueCallForConfig","getOptions","waitForReady","error","config","OK","restrictControlPlaneStatusCode","Metadata","methodConfig","configDeadline","Date","setSeconds","getSeconds","seconds","setMilliseconds","getMilliseconds","nanos","push","dynamicFilterFactories","sendMetadata","filteredMetadata","createInnerCall","getCallNumber","start","onReceiveMetadata","receiveMetadata","onReceiveMessage","receiveMessage","filteredMesssage","startRead","reportResolverError","getPeer","_b","getTarget","clone","length","setCredentials","compose","addStatusWatcher","exports"],"sources":["/Users/juanrodriguez/Documents/projects/face-detection-app/node_modules/@grpc/grpc-js/src/resolving-call.ts"],"sourcesContent":["/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { CallCredentials } from './call-credentials';\nimport {\n  Call,\n  CallStreamOptions,\n  InterceptingListener,\n  MessageContext,\n  StatusObject,\n} from './call-interface';\nimport { LogVerbosity, Propagate, Status } from './constants';\nimport {\n  Deadline,\n  deadlineToString,\n  getRelativeTimeout,\n  minDeadline,\n} from './deadline';\nimport { FilterStack, FilterStackFactory } from './filter-stack';\nimport { InternalChannel } from './internal-channel';\nimport { Metadata } from './metadata';\nimport * as logging from './logging';\nimport { restrictControlPlaneStatusCode } from './control-plane-status';\n\nconst TRACER_NAME = 'resolving_call';\n\nexport class ResolvingCall implements Call {\n  private child: Call | null = null;\n  private readPending = false;\n  private pendingMessage: { context: MessageContext; message: Buffer } | null =\n    null;\n  private pendingHalfClose = false;\n  private ended = false;\n  private readFilterPending = false;\n  private writeFilterPending = false;\n  private pendingChildStatus: StatusObject | null = null;\n  private metadata: Metadata | null = null;\n  private listener: InterceptingListener | null = null;\n  private deadline: Deadline;\n  private host: string;\n  private statusWatchers: ((status: StatusObject) => void)[] = [];\n  private deadlineTimer: NodeJS.Timer = setTimeout(() => {}, 0);\n  private filterStack: FilterStack | null = null;\n\n  constructor(\n    private readonly channel: InternalChannel,\n    private readonly method: string,\n    options: CallStreamOptions,\n    private readonly filterStackFactory: FilterStackFactory,\n    private credentials: CallCredentials,\n    private callNumber: number\n  ) {\n    this.deadline = options.deadline;\n    this.host = options.host;\n    if (options.parentCall) {\n      if (options.flags & Propagate.CANCELLATION) {\n        options.parentCall.on('cancelled', () => {\n          this.cancelWithStatus(Status.CANCELLED, 'Cancelled by parent call');\n        });\n      }\n      if (options.flags & Propagate.DEADLINE) {\n        this.trace(\n          'Propagating deadline from parent: ' +\n            options.parentCall.getDeadline()\n        );\n        this.deadline = minDeadline(\n          this.deadline,\n          options.parentCall.getDeadline()\n        );\n      }\n    }\n    this.trace('Created');\n    this.runDeadlineTimer();\n  }\n\n  private trace(text: string): void {\n    logging.trace(\n      LogVerbosity.DEBUG,\n      TRACER_NAME,\n      '[' + this.callNumber + '] ' + text\n    );\n  }\n\n  private runDeadlineTimer() {\n    clearTimeout(this.deadlineTimer);\n    this.trace('Deadline: ' + deadlineToString(this.deadline));\n    const timeout = getRelativeTimeout(this.deadline);\n    if (timeout !== Infinity) {\n      this.trace('Deadline will be reached in ' + timeout + 'ms');\n      const handleDeadline = () => {\n        this.cancelWithStatus(Status.DEADLINE_EXCEEDED, 'Deadline exceeded');\n      };\n      if (timeout <= 0) {\n        process.nextTick(handleDeadline);\n      } else {\n        this.deadlineTimer = setTimeout(handleDeadline, timeout);\n      }\n    }\n  }\n\n  private outputStatus(status: StatusObject) {\n    if (!this.ended) {\n      this.ended = true;\n      if (!this.filterStack) {\n        this.filterStack = this.filterStackFactory.createFilter();\n      }\n      clearTimeout(this.deadlineTimer);\n      const filteredStatus = this.filterStack.receiveTrailers(status);\n      this.trace(\n        'ended with status: code=' +\n          filteredStatus.code +\n          ' details=\"' +\n          filteredStatus.details +\n          '\"'\n      );\n      this.statusWatchers.forEach(watcher => watcher(filteredStatus));\n      process.nextTick(() => {\n        this.listener?.onReceiveStatus(filteredStatus);\n      });\n    }\n  }\n\n  private sendMessageOnChild(context: MessageContext, message: Buffer): void {\n    if (!this.child) {\n      throw new Error('sendMessageonChild called with child not populated');\n    }\n    const child = this.child;\n    this.writeFilterPending = true;\n    this.filterStack!.sendMessage(\n      Promise.resolve({ message: message, flags: context.flags })\n    ).then(\n      filteredMessage => {\n        this.writeFilterPending = false;\n        child.sendMessageWithContext(context, filteredMessage.message);\n        if (this.pendingHalfClose) {\n          child.halfClose();\n        }\n      },\n      (status: StatusObject) => {\n        this.cancelWithStatus(status.code, status.details);\n      }\n    );\n  }\n\n  getConfig(): void {\n    if (this.ended) {\n      return;\n    }\n    if (!this.metadata || !this.listener) {\n      throw new Error('getConfig called before start');\n    }\n    const configResult = this.channel.getConfig(this.method, this.metadata);\n    if (configResult.type === 'NONE') {\n      this.channel.queueCallForConfig(this);\n      return;\n    } else if (configResult.type === 'ERROR') {\n      if (this.metadata.getOptions().waitForReady) {\n        this.channel.queueCallForConfig(this);\n      } else {\n        this.outputStatus(configResult.error);\n      }\n      return;\n    }\n    // configResult.type === 'SUCCESS'\n    const config = configResult.config;\n    if (config.status !== Status.OK) {\n      const { code, details } = restrictControlPlaneStatusCode(\n        config.status,\n        'Failed to route call to method ' + this.method\n      );\n      this.outputStatus({\n        code: code,\n        details: details,\n        metadata: new Metadata(),\n      });\n      return;\n    }\n\n    if (config.methodConfig.timeout) {\n      const configDeadline = new Date();\n      configDeadline.setSeconds(\n        configDeadline.getSeconds() + config.methodConfig.timeout.seconds\n      );\n      configDeadline.setMilliseconds(\n        configDeadline.getMilliseconds() +\n          config.methodConfig.timeout.nanos / 1_000_000\n      );\n      this.deadline = minDeadline(this.deadline, configDeadline);\n      this.runDeadlineTimer();\n    }\n\n    this.filterStackFactory.push(config.dynamicFilterFactories);\n    this.filterStack = this.filterStackFactory.createFilter();\n    this.filterStack.sendMetadata(Promise.resolve(this.metadata)).then(\n      filteredMetadata => {\n        this.child = this.channel.createInnerCall(\n          config,\n          this.method,\n          this.host,\n          this.credentials,\n          this.deadline\n        );\n        this.trace('Created child [' + this.child.getCallNumber() + ']');\n        this.child.start(filteredMetadata, {\n          onReceiveMetadata: metadata => {\n            this.trace('Received metadata');\n            this.listener!.onReceiveMetadata(\n              this.filterStack!.receiveMetadata(metadata)\n            );\n          },\n          onReceiveMessage: message => {\n            this.trace('Received message');\n            this.readFilterPending = true;\n            this.filterStack!.receiveMessage(message).then(\n              filteredMesssage => {\n                this.trace('Finished filtering received message');\n                this.readFilterPending = false;\n                this.listener!.onReceiveMessage(filteredMesssage);\n                if (this.pendingChildStatus) {\n                  this.outputStatus(this.pendingChildStatus);\n                }\n              },\n              (status: StatusObject) => {\n                this.cancelWithStatus(status.code, status.details);\n              }\n            );\n          },\n          onReceiveStatus: status => {\n            this.trace('Received status');\n            if (this.readFilterPending) {\n              this.pendingChildStatus = status;\n            } else {\n              this.outputStatus(status);\n            }\n          },\n        });\n        if (this.readPending) {\n          this.child.startRead();\n        }\n        if (this.pendingMessage) {\n          this.sendMessageOnChild(\n            this.pendingMessage.context,\n            this.pendingMessage.message\n          );\n        } else if (this.pendingHalfClose) {\n          this.child.halfClose();\n        }\n      },\n      (status: StatusObject) => {\n        this.outputStatus(status);\n      }\n    );\n  }\n\n  reportResolverError(status: StatusObject) {\n    if (this.metadata?.getOptions().waitForReady) {\n      this.channel.queueCallForConfig(this);\n    } else {\n      this.outputStatus(status);\n    }\n  }\n  cancelWithStatus(status: Status, details: string): void {\n    this.trace(\n      'cancelWithStatus code: ' + status + ' details: \"' + details + '\"'\n    );\n    this.child?.cancelWithStatus(status, details);\n    this.outputStatus({\n      code: status,\n      details: details,\n      metadata: new Metadata(),\n    });\n  }\n  getPeer(): string {\n    return this.child?.getPeer() ?? this.channel.getTarget();\n  }\n  start(metadata: Metadata, listener: InterceptingListener): void {\n    this.trace('start called');\n    this.metadata = metadata.clone();\n    this.listener = listener;\n    this.getConfig();\n  }\n  sendMessageWithContext(context: MessageContext, message: Buffer): void {\n    this.trace('write() called with message of length ' + message.length);\n    if (this.child) {\n      this.sendMessageOnChild(context, message);\n    } else {\n      this.pendingMessage = { context, message };\n    }\n  }\n  startRead(): void {\n    this.trace('startRead called');\n    if (this.child) {\n      this.child.startRead();\n    } else {\n      this.readPending = true;\n    }\n  }\n  halfClose(): void {\n    this.trace('halfClose called');\n    if (this.child && !this.writeFilterPending) {\n      this.child.halfClose();\n    } else {\n      this.pendingHalfClose = true;\n    }\n  }\n  setCredentials(credentials: CallCredentials): void {\n    this.credentials = this.credentials.compose(credentials);\n  }\n\n  addStatusWatcher(watcher: (status: StatusObject) => void) {\n    this.statusWatchers.push(watcher);\n  }\n\n  getCallNumber(): number {\n    return this.callNumber;\n  }\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAyBA,MAAAA,WAAA,GAAAC,OAAA;AACA,MAAAC,UAAA,GAAAD,OAAA;AAQA,MAAAE,UAAA,GAAAF,OAAA;AACA,MAAAG,OAAA,GAAAH,OAAA;AACA,MAAAI,sBAAA,GAAAJ,OAAA;AAEA,MAAMK,WAAW,GAAG,gBAAgB;AAEpC,MAAaC,aAAa;EAkBxBC,YACmBC,OAAwB,EACxBC,MAAc,EAC/BC,OAA0B,EACTC,kBAAsC,EAC/CC,WAA4B,EAC5BC,UAAkB;IALT,KAAAL,OAAO,GAAPA,OAAO;IACP,KAAAC,MAAM,GAANA,MAAM;IAEN,KAAAE,kBAAkB,GAAlBA,kBAAkB;IAC3B,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,UAAU,GAAVA,UAAU;IAvBZ,KAAAC,KAAK,GAAgB,IAAI;IACzB,KAAAC,WAAW,GAAG,KAAK;IACnB,KAAAC,cAAc,GACpB,IAAI;IACE,KAAAC,gBAAgB,GAAG,KAAK;IACxB,KAAAC,KAAK,GAAG,KAAK;IACb,KAAAC,iBAAiB,GAAG,KAAK;IACzB,KAAAC,kBAAkB,GAAG,KAAK;IAC1B,KAAAC,kBAAkB,GAAwB,IAAI;IAC9C,KAAAC,QAAQ,GAAoB,IAAI;IAChC,KAAAC,QAAQ,GAAgC,IAAI;IAG5C,KAAAC,cAAc,GAAuC,EAAE;IACvD,KAAAC,aAAa,GAAiBC,UAAU,CAAC,MAAK,CAAE,CAAC,EAAE,CAAC,CAAC;IACrD,KAAAC,WAAW,GAAuB,IAAI;IAU5C,IAAI,CAACC,QAAQ,GAAGlB,OAAO,CAACkB,QAAQ;IAChC,IAAI,CAACC,IAAI,GAAGnB,OAAO,CAACmB,IAAI;IACxB,IAAInB,OAAO,CAACoB,UAAU,EAAE;MACtB,IAAIpB,OAAO,CAACqB,KAAK,GAAGhC,WAAA,CAAAiC,SAAS,CAACC,YAAY,EAAE;QAC1CvB,OAAO,CAACoB,UAAU,CAACI,EAAE,CAAC,WAAW,EAAE,MAAK;UACtC,IAAI,CAACC,gBAAgB,CAACpC,WAAA,CAAAqC,MAAM,CAACC,SAAS,EAAE,0BAA0B,CAAC;QACrE,CAAC,CAAC;;MAEJ,IAAI3B,OAAO,CAACqB,KAAK,GAAGhC,WAAA,CAAAiC,SAAS,CAACM,QAAQ,EAAE;QACtC,IAAI,CAACC,KAAK,CACR,oCAAoC,GAClC7B,OAAO,CAACoB,UAAU,CAACU,WAAW,EAAE,CACnC;QACD,IAAI,CAACZ,QAAQ,GAAG,IAAA3B,UAAA,CAAAwC,WAAW,EACzB,IAAI,CAACb,QAAQ,EACblB,OAAO,CAACoB,UAAU,CAACU,WAAW,EAAE,CACjC;;;IAGL,IAAI,CAACD,KAAK,CAAC,SAAS,CAAC;IACrB,IAAI,CAACG,gBAAgB,EAAE;EACzB;EAEQH,KAAKA,CAACI,IAAY;IACxBxC,OAAO,CAACoC,KAAK,CACXxC,WAAA,CAAA6C,YAAY,CAACC,KAAK,EAClBxC,WAAW,EACX,GAAG,GAAG,IAAI,CAACQ,UAAU,GAAG,IAAI,GAAG8B,IAAI,CACpC;EACH;EAEQD,gBAAgBA,CAAA;IACtBI,YAAY,CAAC,IAAI,CAACrB,aAAa,CAAC;IAChC,IAAI,CAACc,KAAK,CAAC,YAAY,GAAG,IAAAtC,UAAA,CAAA8C,gBAAgB,EAAC,IAAI,CAACnB,QAAQ,CAAC,CAAC;IAC1D,MAAMoB,OAAO,GAAG,IAAA/C,UAAA,CAAAgD,kBAAkB,EAAC,IAAI,CAACrB,QAAQ,CAAC;IACjD,IAAIoB,OAAO,KAAKE,QAAQ,EAAE;MACxB,IAAI,CAACX,KAAK,CAAC,8BAA8B,GAAGS,OAAO,GAAG,IAAI,CAAC;MAC3D,MAAMG,cAAc,GAAGA,CAAA,KAAK;QAC1B,IAAI,CAAChB,gBAAgB,CAACpC,WAAA,CAAAqC,MAAM,CAACgB,iBAAiB,EAAE,mBAAmB,CAAC;MACtE,CAAC;MACD,IAAIJ,OAAO,IAAI,CAAC,EAAE;QAChBK,OAAO,CAACC,QAAQ,CAACH,cAAc,CAAC;OACjC,MAAM;QACL,IAAI,CAAC1B,aAAa,GAAGC,UAAU,CAACyB,cAAc,EAAEH,OAAO,CAAC;;;EAG9D;EAEQO,YAAYA,CAACC,MAAoB;IACvC,IAAI,CAAC,IAAI,CAACtC,KAAK,EAAE;MACf,IAAI,CAACA,KAAK,GAAG,IAAI;MACjB,IAAI,CAAC,IAAI,CAACS,WAAW,EAAE;QACrB,IAAI,CAACA,WAAW,GAAG,IAAI,CAAChB,kBAAkB,CAAC8C,YAAY,EAAE;;MAE3DX,YAAY,CAAC,IAAI,CAACrB,aAAa,CAAC;MAChC,MAAMiC,cAAc,GAAG,IAAI,CAAC/B,WAAW,CAACgC,eAAe,CAACH,MAAM,CAAC;MAC/D,IAAI,CAACjB,KAAK,CACR,0BAA0B,GACxBmB,cAAc,CAACE,IAAI,GACnB,YAAY,GACZF,cAAc,CAACG,OAAO,GACtB,GAAG,CACN;MACD,IAAI,CAACrC,cAAc,CAACsC,OAAO,CAACC,OAAO,IAAIA,OAAO,CAACL,cAAc,CAAC,CAAC;MAC/DL,OAAO,CAACC,QAAQ,CAAC,MAAK;;QACpB,CAAAU,EAAA,OAAI,CAACzC,QAAQ,cAAAyC,EAAA,uBAAAA,EAAA,CAAEC,eAAe,CAACP,cAAc,CAAC;MAChD,CAAC,CAAC;;EAEN;EAEQQ,kBAAkBA,CAACC,OAAuB,EAAEC,OAAe;IACjE,IAAI,CAAC,IAAI,CAACtD,KAAK,EAAE;MACf,MAAM,IAAIuD,KAAK,CAAC,oDAAoD,CAAC;;IAEvE,MAAMvD,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,IAAI,CAACM,kBAAkB,GAAG,IAAI;IAC9B,IAAI,CAACO,WAAY,CAAC2C,WAAW,CAC3BC,OAAO,CAACC,OAAO,CAAC;MAAEJ,OAAO,EAAEA,OAAO;MAAErC,KAAK,EAAEoC,OAAO,CAACpC;IAAK,CAAE,CAAC,CAC5D,CAAC0C,IAAI,CACJC,eAAe,IAAG;MAChB,IAAI,CAACtD,kBAAkB,GAAG,KAAK;MAC/BN,KAAK,CAAC6D,sBAAsB,CAACR,OAAO,EAAEO,eAAe,CAACN,OAAO,CAAC;MAC9D,IAAI,IAAI,CAACnD,gBAAgB,EAAE;QACzBH,KAAK,CAAC8D,SAAS,EAAE;;IAErB,CAAC,EACApB,MAAoB,IAAI;MACvB,IAAI,CAACrB,gBAAgB,CAACqB,MAAM,CAACI,IAAI,EAAEJ,MAAM,CAACK,OAAO,CAAC;IACpD,CAAC,CACF;EACH;EAEAgB,SAASA,CAAA;IACP,IAAI,IAAI,CAAC3D,KAAK,EAAE;MACd;;IAEF,IAAI,CAAC,IAAI,CAACI,QAAQ,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;MACpC,MAAM,IAAI8C,KAAK,CAAC,+BAA+B,CAAC;;IAElD,MAAMS,YAAY,GAAG,IAAI,CAACtE,OAAO,CAACqE,SAAS,CAAC,IAAI,CAACpE,MAAM,EAAE,IAAI,CAACa,QAAQ,CAAC;IACvE,IAAIwD,YAAY,CAACC,IAAI,KAAK,MAAM,EAAE;MAChC,IAAI,CAACvE,OAAO,CAACwE,kBAAkB,CAAC,IAAI,CAAC;MACrC;KACD,MAAM,IAAIF,YAAY,CAACC,IAAI,KAAK,OAAO,EAAE;MACxC,IAAI,IAAI,CAACzD,QAAQ,CAAC2D,UAAU,EAAE,CAACC,YAAY,EAAE;QAC3C,IAAI,CAAC1E,OAAO,CAACwE,kBAAkB,CAAC,IAAI,CAAC;OACtC,MAAM;QACL,IAAI,CAACzB,YAAY,CAACuB,YAAY,CAACK,KAAK,CAAC;;MAEvC;;IAEF;IACA,MAAMC,MAAM,GAAGN,YAAY,CAACM,MAAM;IAClC,IAAIA,MAAM,CAAC5B,MAAM,KAAKzD,WAAA,CAAAqC,MAAM,CAACiD,EAAE,EAAE;MAC/B,MAAM;QAAEzB,IAAI;QAAEC;MAAO,CAAE,GAAG,IAAAzD,sBAAA,CAAAkF,8BAA8B,EACtDF,MAAM,CAAC5B,MAAM,EACb,iCAAiC,GAAG,IAAI,CAAC/C,MAAM,CAChD;MACD,IAAI,CAAC8C,YAAY,CAAC;QAChBK,IAAI,EAAEA,IAAI;QACVC,OAAO,EAAEA,OAAO;QAChBvC,QAAQ,EAAE,IAAIpB,UAAA,CAAAqF,QAAQ;OACvB,CAAC;MACF;;IAGF,IAAIH,MAAM,CAACI,YAAY,CAACxC,OAAO,EAAE;MAC/B,MAAMyC,cAAc,GAAG,IAAIC,IAAI,EAAE;MACjCD,cAAc,CAACE,UAAU,CACvBF,cAAc,CAACG,UAAU,EAAE,GAAGR,MAAM,CAACI,YAAY,CAACxC,OAAO,CAAC6C,OAAO,CAClE;MACDJ,cAAc,CAACK,eAAe,CAC5BL,cAAc,CAACM,eAAe,EAAE,GAC9BX,MAAM,CAACI,YAAY,CAACxC,OAAO,CAACgD,KAAK,GAAG,OAAS,CAChD;MACD,IAAI,CAACpE,QAAQ,GAAG,IAAA3B,UAAA,CAAAwC,WAAW,EAAC,IAAI,CAACb,QAAQ,EAAE6D,cAAc,CAAC;MAC1D,IAAI,CAAC/C,gBAAgB,EAAE;;IAGzB,IAAI,CAAC/B,kBAAkB,CAACsF,IAAI,CAACb,MAAM,CAACc,sBAAsB,CAAC;IAC3D,IAAI,CAACvE,WAAW,GAAG,IAAI,CAAChB,kBAAkB,CAAC8C,YAAY,EAAE;IACzD,IAAI,CAAC9B,WAAW,CAACwE,YAAY,CAAC5B,OAAO,CAACC,OAAO,CAAC,IAAI,CAAClD,QAAQ,CAAC,CAAC,CAACmD,IAAI,CAChE2B,gBAAgB,IAAG;MACjB,IAAI,CAACtF,KAAK,GAAG,IAAI,CAACN,OAAO,CAAC6F,eAAe,CACvCjB,MAAM,EACN,IAAI,CAAC3E,MAAM,EACX,IAAI,CAACoB,IAAI,EACT,IAAI,CAACjB,WAAW,EAChB,IAAI,CAACgB,QAAQ,CACd;MACD,IAAI,CAACW,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAACzB,KAAK,CAACwF,aAAa,EAAE,GAAG,GAAG,CAAC;MAChE,IAAI,CAACxF,KAAK,CAACyF,KAAK,CAACH,gBAAgB,EAAE;QACjCI,iBAAiB,EAAElF,QAAQ,IAAG;UAC5B,IAAI,CAACiB,KAAK,CAAC,mBAAmB,CAAC;UAC/B,IAAI,CAAChB,QAAS,CAACiF,iBAAiB,CAC9B,IAAI,CAAC7E,WAAY,CAAC8E,eAAe,CAACnF,QAAQ,CAAC,CAC5C;QACH,CAAC;QACDoF,gBAAgB,EAAEtC,OAAO,IAAG;UAC1B,IAAI,CAAC7B,KAAK,CAAC,kBAAkB,CAAC;UAC9B,IAAI,CAACpB,iBAAiB,GAAG,IAAI;UAC7B,IAAI,CAACQ,WAAY,CAACgF,cAAc,CAACvC,OAAO,CAAC,CAACK,IAAI,CAC5CmC,gBAAgB,IAAG;YACjB,IAAI,CAACrE,KAAK,CAAC,qCAAqC,CAAC;YACjD,IAAI,CAACpB,iBAAiB,GAAG,KAAK;YAC9B,IAAI,CAACI,QAAS,CAACmF,gBAAgB,CAACE,gBAAgB,CAAC;YACjD,IAAI,IAAI,CAACvF,kBAAkB,EAAE;cAC3B,IAAI,CAACkC,YAAY,CAAC,IAAI,CAAClC,kBAAkB,CAAC;;UAE9C,CAAC,EACAmC,MAAoB,IAAI;YACvB,IAAI,CAACrB,gBAAgB,CAACqB,MAAM,CAACI,IAAI,EAAEJ,MAAM,CAACK,OAAO,CAAC;UACpD,CAAC,CACF;QACH,CAAC;QACDI,eAAe,EAAET,MAAM,IAAG;UACxB,IAAI,CAACjB,KAAK,CAAC,iBAAiB,CAAC;UAC7B,IAAI,IAAI,CAACpB,iBAAiB,EAAE;YAC1B,IAAI,CAACE,kBAAkB,GAAGmC,MAAM;WACjC,MAAM;YACL,IAAI,CAACD,YAAY,CAACC,MAAM,CAAC;;QAE7B;OACD,CAAC;MACF,IAAI,IAAI,CAACzC,WAAW,EAAE;QACpB,IAAI,CAACD,KAAK,CAAC+F,SAAS,EAAE;;MAExB,IAAI,IAAI,CAAC7F,cAAc,EAAE;QACvB,IAAI,CAACkD,kBAAkB,CACrB,IAAI,CAAClD,cAAc,CAACmD,OAAO,EAC3B,IAAI,CAACnD,cAAc,CAACoD,OAAO,CAC5B;OACF,MAAM,IAAI,IAAI,CAACnD,gBAAgB,EAAE;QAChC,IAAI,CAACH,KAAK,CAAC8D,SAAS,EAAE;;IAE1B,CAAC,EACApB,MAAoB,IAAI;MACvB,IAAI,CAACD,YAAY,CAACC,MAAM,CAAC;IAC3B,CAAC,CACF;EACH;EAEAsD,mBAAmBA,CAACtD,MAAoB;;IACtC,IAAI,CAAAQ,EAAA,OAAI,CAAC1C,QAAQ,cAAA0C,EAAA,uBAAAA,EAAA,CAAEiB,UAAU,GAAGC,YAAY,EAAE;MAC5C,IAAI,CAAC1E,OAAO,CAACwE,kBAAkB,CAAC,IAAI,CAAC;KACtC,MAAM;MACL,IAAI,CAACzB,YAAY,CAACC,MAAM,CAAC;;EAE7B;EACArB,gBAAgBA,CAACqB,MAAc,EAAEK,OAAe;;IAC9C,IAAI,CAACtB,KAAK,CACR,yBAAyB,GAAGiB,MAAM,GAAG,aAAa,GAAGK,OAAO,GAAG,GAAG,CACnE;IACD,CAAAG,EAAA,OAAI,CAAClD,KAAK,cAAAkD,EAAA,uBAAAA,EAAA,CAAE7B,gBAAgB,CAACqB,MAAM,EAAEK,OAAO,CAAC;IAC7C,IAAI,CAACN,YAAY,CAAC;MAChBK,IAAI,EAAEJ,MAAM;MACZK,OAAO,EAAEA,OAAO;MAChBvC,QAAQ,EAAE,IAAIpB,UAAA,CAAAqF,QAAQ;KACvB,CAAC;EACJ;EACAwB,OAAOA,CAAA;;IACL,OAAO,CAAAC,EAAA,IAAAhD,EAAA,OAAI,CAAClD,KAAK,cAAAkD,EAAA,uBAAAA,EAAA,CAAE+C,OAAO,EAAE,cAAAC,EAAA,cAAAA,EAAA,GAAI,IAAI,CAACxG,OAAO,CAACyG,SAAS,EAAE;EAC1D;EACAV,KAAKA,CAACjF,QAAkB,EAAEC,QAA8B;IACtD,IAAI,CAACgB,KAAK,CAAC,cAAc,CAAC;IAC1B,IAAI,CAACjB,QAAQ,GAAGA,QAAQ,CAAC4F,KAAK,EAAE;IAChC,IAAI,CAAC3F,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACsD,SAAS,EAAE;EAClB;EACAF,sBAAsBA,CAACR,OAAuB,EAAEC,OAAe;IAC7D,IAAI,CAAC7B,KAAK,CAAC,wCAAwC,GAAG6B,OAAO,CAAC+C,MAAM,CAAC;IACrE,IAAI,IAAI,CAACrG,KAAK,EAAE;MACd,IAAI,CAACoD,kBAAkB,CAACC,OAAO,EAAEC,OAAO,CAAC;KAC1C,MAAM;MACL,IAAI,CAACpD,cAAc,GAAG;QAAEmD,OAAO;QAAEC;MAAO,CAAE;;EAE9C;EACAyC,SAASA,CAAA;IACP,IAAI,CAACtE,KAAK,CAAC,kBAAkB,CAAC;IAC9B,IAAI,IAAI,CAACzB,KAAK,EAAE;MACd,IAAI,CAACA,KAAK,CAAC+F,SAAS,EAAE;KACvB,MAAM;MACL,IAAI,CAAC9F,WAAW,GAAG,IAAI;;EAE3B;EACA6D,SAASA,CAAA;IACP,IAAI,CAACrC,KAAK,CAAC,kBAAkB,CAAC;IAC9B,IAAI,IAAI,CAACzB,KAAK,IAAI,CAAC,IAAI,CAACM,kBAAkB,EAAE;MAC1C,IAAI,CAACN,KAAK,CAAC8D,SAAS,EAAE;KACvB,MAAM;MACL,IAAI,CAAC3D,gBAAgB,GAAG,IAAI;;EAEhC;EACAmG,cAAcA,CAACxG,WAA4B;IACzC,IAAI,CAACA,WAAW,GAAG,IAAI,CAACA,WAAW,CAACyG,OAAO,CAACzG,WAAW,CAAC;EAC1D;EAEA0G,gBAAgBA,CAACvD,OAAuC;IACtD,IAAI,CAACvC,cAAc,CAACyE,IAAI,CAAClC,OAAO,CAAC;EACnC;EAEAuC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACzF,UAAU;EACxB;;AAjSF0G,OAAA,CAAAjH,aAAA,GAAAA,aAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}