{"ast":null,"code":"var _jsxFileName = \"/Users/juanrodriguez/Desktop/login-app/src/App.js\";\nimport './App.css';\nimport Navigation from './components/navigation/navigation';\nimport Logo from './components/Logo/logo';\nimport Signin from './components/SignIn/Signin';\nimport Clarifai from 'clarifai';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Rank/Rank';\nimport Register from './components/Register/Register';\nimport ParticlesBg from 'particles-bg';\nimport React, { Component } from 'react';\n\n// ADD OWN API FROM CLARIFAI \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: '8b74b23b5e27427faae047afd9c1aa49'\n});\nconst returnClarifaiRequestOptions = imageUrl => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentification\n  // const PAT = '7200123360f6405cab5f4234340b4512';\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = 'jqj03gegfkp9';\n  const APP_ID = 'test';\n  // Change these to whatever model and image URL you want to use\n  // const MODEL_ID = 'face-detection'\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key 7200123360f6405cab5f4234340b4512'\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict('face-detection', returnClarifaiRequestOptions(this.state.input));\n      fetch(`https://api.clarifai.com/v2/models/face-detection/versions/6dc7e46bc9124c5c8824be4822abe105/outputs`, returnClarifaiRequestOptions(this.state.input)).then(response => response.json()).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n\n      // app.models.predict('face-detection', this.state.input)\n      // .then(response => {\n      //   console.log('hi', response)\n      //   if (response) {\n      //     fetch('http://localhost:3000/image', {\n      //       method: 'put',\n      //       headers: {'Content-Type': 'application/json'},\n      //       body: JSON.stringify({\n      //         id: this.state.user.id\n      //       })\n      //     })\n      //       .then(response => response.json())\n      //       .then(count => {\n      //         this.setState(Object.assign(this.state.user, { entries: count}))\n      //       })\n\n      //   }\n      //   this.displayFaceBox(this.calculateFaceLocation(response))\n      // })\n      // .catch(err => console.log(err));\n    };\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n      this.setState({\n        route: route\n      });\n    };\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"cobweb\",\n        color: \"#7C24CC\",\n        num: 200,\n        bg: true,\n        style: {\n          position: \"absolute\",\n          zIndex: -1,\n          top: 0,\n          left: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: this.state.isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), this.state.route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: this.state.box,\n          imageUrl: this.state.imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this) : this.state.route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Navigation","Logo","Signin","Clarifai","ImageLinkForm","FaceRecognition","Rank","Register","ParticlesBg","React","Component","jsxDEV","_jsxDEV","app","App","apiKey","returnClarifaiRequestOptions","imageUrl","USER_ID","APP_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","value","onButtonSubmit","state","models","predict","fetch","then","response","json","catch","err","console","log","onRouteChange","route","isSignedIn","render","className","children","type","color","num","bg","style","position","zIndex","top","left","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/juanrodriguez/Desktop/login-app/src/App.js"],"sourcesContent":["import './App.css';\nimport Navigation from './components/navigation/navigation';\nimport Logo from './components/Logo/logo';\nimport Signin from './components/SignIn/Signin';\nimport Clarifai from 'clarifai';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Rank/Rank';\nimport Register from './components/Register/Register';\nimport ParticlesBg from 'particles-bg';\nimport React, { Component } from 'react';\n\n\n    // ADD OWN API FROM CLARIFAI \n    const app = new Clarifai.App({\n      apiKey: '8b74b23b5e27427faae047afd9c1aa49'\n    });\n    const returnClarifaiRequestOptions = (imageUrl) => {\n       // Your PAT (Personal Access Token) can be found in the portal under Authentification\n    // const PAT = '7200123360f6405cab5f4234340b4512';\n    // Specify the correct user_id/app_id pairings\n    // Since you're making inferences outside your app's scope\n    const USER_ID = 'jqj03gegfkp9';       \n    const APP_ID = 'test';\n    // Change these to whatever model and image URL you want to use\n    // const MODEL_ID = 'face-detection'\n    const IMAGE_URL = imageUrl;\n\n    const raw = JSON.stringify({\n          \"user_app_id\": {\n              \"user_id\": USER_ID,\n              \"app_id\": APP_ID\n          },\n          \"inputs\": [\n              {\n                  \"data\": {\n                      \"image\": {\n                          \"url\": IMAGE_URL\n                      }\n                  }\n              }\n          ]\n      });\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Key 7200123360f6405cab5f4234340b4512'\n      },\n      body: raw\n    };\n\n      return requestOptions\n    }\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false \n    }\n}\n\ncalculateFaceLocation = (data) => {\n  const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n  const image = document.getElementById('inputImage');\n  const width = Number(image.width);\n  const height = Number(image.height);\n  return {\n    leftCol: clarifaiFace.left_col * width,\n    topRow: clarifaiFace.top_row * height,\n    rightCol: width - (clarifaiFace.right_col * width),\n    bottomRow: height - (clarifaiFace.bottom_row * height)\n  }\n}\n\ndisplayFaceBox = (box) => {\n  this.setState({box: box});\n}\n\nonInputChange = (event) => {\n  this.setState({ input: event.target.value });\n} \n\nonButtonSubmit = () => {\n  this.setState({imageUrl: this.state.input});\n  app.models.predict('face-detection', returnClarifaiRequestOptions(this.state.input))\n  fetch(`https://api.clarifai.com/v2/models/face-detection/versions/6dc7e46bc9124c5c8824be4822abe105/outputs`, returnClarifaiRequestOptions(this.state.input))\n    .then(response => response.json())\n    .then(response => this.displayFaceBox( this.calculateFaceLocation(response)))\n    .catch(err => console.log(err));\n\n\n    // app.models.predict('face-detection', this.state.input)\n    // .then(response => {\n    //   console.log('hi', response)\n    //   if (response) {\n    //     fetch('http://localhost:3000/image', {\n    //       method: 'put',\n    //       headers: {'Content-Type': 'application/json'},\n    //       body: JSON.stringify({\n    //         id: this.state.user.id\n    //       })\n    //     })\n    //       .then(response => response.json())\n    //       .then(count => {\n    //         this.setState(Object.assign(this.state.user, { entries: count}))\n    //       })\n\n    //   }\n    //   this.displayFaceBox(this.calculateFaceLocation(response))\n    // })\n    // .catch(err => console.log(err));\n  }\n\nonRouteChange = (route) => {\n  if (route === 'signout') {\n    this.setState({isSignedIn: false})\n  } else if (route === 'home') {\n    this.setState({isSignedIn: true})\n  }\n  this.setState({route: route});\n}\n\nrender () {\n    return (\n      <div className=\"App\">\n        <ParticlesBg  \n            type=\"cobweb\"\n            color=\"#7C24CC\" \n            num={200}\n            bg={true}\n            style={{\n              position: \"absolute\",\n              zIndex: -1,\n              top: 0,\n              left: 0\n            }}\n            />\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange} />\n        { this.state.route === 'home' \n        ? <div> \n            <Logo />\n            <Rank />\n            <ImageLinkForm \n            onInputChange={this.onInputChange} \n            onButtonSubmit={this.onButtonSubmit} \n            />\n            <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl} /> \n         </div>\n         : (\n          this.state.route === 'signin' \n          ? <Signin onRouteChange={this.onRouteChange}/> \n          : <Register onRouteChange={this.onRouteChange}/> \n         )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}